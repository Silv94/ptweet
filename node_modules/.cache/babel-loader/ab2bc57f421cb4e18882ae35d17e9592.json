{"ast":null,"code":"import _regeneratorRuntime from \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/src/client-component/posts/Posts.js\";\nimport React, { Component } from 'react';\nimport UserCard from '../layout/UserCard';\n\nvar Tweets =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Tweets, _Component);\n\n  function Tweets(props) {\n    var _this;\n\n    _classCallCheck(this, Tweets);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Tweets).call(this, props));\n\n    _this.handleSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var response, body, newStar;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _context.next = 3;\n                return fetch('/api/test', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: _this.state.post\n                  })\n                });\n\n              case 3:\n                response = _context.sent;\n                _context.next = 6;\n                return response.text();\n\n              case 6:\n                body = _context.sent;\n\n                _this.setState({\n                  responseToPost: body\n                });\n\n                _this.setState({\n                  active: true\n                });\n\n                _this.setState({\n                  post: ''\n                });\n\n                newStar = [{\n                  avatar: require('../images/hammer.png'),\n                  name: 'Sebi \"The Viking\"',\n                  review: 'Alex suffers from inner genital syndrome',\n                  message: body,\n                  rating: Math.round(Math.random() * 100)\n                }];\n\n                _this.setState({\n                  stars: newStar.concat(_toConsumableArray(_this.state.stars))\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.onClickHandler = function (item) {\n      var currentStar = [{\n        avatar: _this.state.stars[1].avatar,\n        name: _this.state.stars[1].name,\n        review: _this.state.stars[1].review,\n        message: _this.state.stars[1].message,\n        rating: _this.state.stars[1].rating\n      }];\n\n      _this.setState({\n        stars: currentStar.concat(_toConsumableArray(_this.state.stars))\n      });\n\n      console.log(currentStar);\n    };\n\n    _this.state = {\n      stars: [{\n        id: 1,\n        avatar: require('../images/madison.jpg'),\n        name: 'Madison Ivy',\n        review: 'For Alex: Mmm, not bad but not good either. Huh.',\n        message: 'You still got a LONG career ahead of you! xoxo',\n        rating: Math.round(Math.random() * 100)\n      }, {\n        id: 2,\n        avatar: require('../images/elsa.jpg'),\n        name: 'Elsa Jean',\n        review: 'Alex needs some more training.',\n        message: 'Ive heard you are the new hot thing on \"BBC\" News ;)',\n        rating: Math.round(Math.random() * 100)\n      }, {\n        id: 3,\n        avatar: require('../images/jayden.jpg'),\n        name: 'Jayden James',\n        review: 'I got cute with him and gave him a second round.',\n        message: 'I expect your piercing personality to get to California.',\n        rating: Math.round(Math.random() * 100)\n      }, {\n        id: 4,\n        avatar: require('../images/kendra.jpg'),\n        name: 'Kendra Lust',\n        review: 'I showed him what mommy knows, he can be a bad boy, ntz ntz.. Overall okaish.',\n        message: 'Mommy made new fresh cookies for you *wink* *wink*',\n        rating: Math.round(Math.random() * 100)\n      }, {\n        id: 5,\n        avatar: require('../images/nicole.jpg'),\n        name: 'Nicole Aniston',\n        review: 'About Alex: Just no.',\n        message: 'Heard you are in town, wanna -meat- ?',\n        rating: Math.round(Math.random() * 100)\n      }],\n      response: '',\n      post: '',\n      responseToPost: '',\n      active: false\n    };\n    return _this;\n  } // componentDidMount() {\n  //   this.callApi()\n  //     .then(res => this.setState({ response: res.express }))\n  //     .catch(err => console.log(err));\n  // }\n  // callApi = async () => {\n  //   const response = await fetch('/');\n  //   const body = await response.json();\n  //   if (response.status !== 200) throw Error(body.message);\n  //   return body;\n  // };\n\n\n  _createClass(Tweets, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"project-list section\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Post a new Tweet:\")), React.createElement(\"input\", {\n        type: \"text\",\n        pattern: \".{5,10}\",\n        required: true,\n        title: \"5 to 10 characters minimum\",\n        maxLength: \"140\",\n        value: this.state.post,\n        onChange: function onChange(e) {\n          return _this2.setState({\n            post: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Tweet!\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), this.state.stars.map(function (star) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134\n          },\n          __self: this\n        }, React.createElement(UserCard, {\n          onClick: _this2.onClickHandler,\n          avatar: star.avatar,\n          name: star.name,\n          review: star.review,\n          message: star.message,\n          rating: star.rating,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return Tweets;\n}(Component);\n\nexport default Tweets;","map":{"version":3,"sources":["/Users/popovicisilviu/Documents/Redux-React-App/marioplan/src/client-component/posts/Posts.js"],"names":["React","Component","UserCard","Tweets","props","handleSubmit","e","preventDefault","fetch","method","headers","body","JSON","stringify","post","state","response","text","setState","responseToPost","active","newStar","avatar","require","name","review","message","rating","Math","round","random","stars","onClickHandler","item","currentStar","console","log","id","target","value","map","star"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport UserCard from '../layout/UserCard'\n\nclass Tweets extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      stars: [{\n        id: 1,\n        avatar: require('../images/madison.jpg'),\n        name: 'Madison Ivy',\n        review: 'For Alex: Mmm, not bad but not good either. Huh.',\n        message: 'You still got a LONG career ahead of you! xoxo',\n        rating: Math.round(Math.random()*100)\n      },\n      {\n        id: 2,\n        avatar: require('../images/elsa.jpg'),\n        name: 'Elsa Jean',\n        review: 'Alex needs some more training.',\n        message: 'Ive heard you are the new hot thing on \"BBC\" News ;)',\n        rating: Math.round(Math.random()*100)\n      },\n      {\n        id: 3,\n        avatar: require('../images/jayden.jpg'),\n        name: 'Jayden James',\n        review: 'I got cute with him and gave him a second round.',\n        message: 'I expect your piercing personality to get to California.',\n        rating: Math.round(Math.random()*100)\n      },\n      {\n        id: 4,\n        avatar: require('../images/kendra.jpg'),\n        name: 'Kendra Lust',\n        review: 'I showed him what mommy knows, he can be a bad boy, ntz ntz.. Overall okaish.',\n        message: 'Mommy made new fresh cookies for you *wink* *wink*',\n        rating: Math.round(Math.random()*100)\n      },\n      {\n        id: 5,\n        avatar: require('../images/nicole.jpg'),\n        name: 'Nicole Aniston',\n        review: 'About Alex: Just no.',\n        message: 'Heard you are in town, wanna -meat- ?',\n        rating: Math.round(Math.random()*100)\n      }\n      ],\n      response: '',\n      post: '',\n      responseToPost: '',\n      active : false,\n    }\n  }\n\n  // componentDidMount() {\n  //   this.callApi()\n  //     .then(res => this.setState({ response: res.express }))\n  //     .catch(err => console.log(err));\n  // }\n\n  // callApi = async () => {\n  //   const response = await fetch('/');\n  //   const body = await response.json();\n  //   if (response.status !== 200) throw Error(body.message);\n  //   return body;\n  // };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/test', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n    this.setState({ responseToPost: body })\n    this.setState({ active: true })\n    this.setState({ post: '' })\n    var newStar = \n      [{\n        avatar: require('../images/hammer.png'),\n        name: 'Sebi \"The Viking\"',\n        review: 'Alex suffers from inner genital syndrome',\n        message: body,\n        rating: Math.round(Math.random()*100)\n      }]\n    \n    this.setState({\n      stars: [...newStar, ...this.state.stars]\n    })\n  };\n\n  onClickHandler = item => {\n    \n    var currentStar = \n    [{\n      avatar: this.state.stars[1].avatar,\n      name: this.state.stars[1].name,\n      review: this.state.stars[1].review,\n      message: this.state.stars[1].message,\n      rating: this.state.stars[1].rating\n    }]\n\n    this.setState({\n      stars: [...currentStar, ...this.state.stars]\n    })\n    console.log(currentStar)\n  }\n\n  render () {\n    return (\n      <div className='project-list section'>\n\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post a new Tweet:</strong>\n          </p>\n          <input\n            type=\"text\"\n            pattern='.{5,10}'\n            required title='5 to 10 characters minimum'\n            maxLength=\"140\"\n            value={this.state.post}\n            onChange={e => this.setState({ post: e.target.value })}\n            />\n          <button type=\"submit\">Tweet!</button>\n        </form>\n\n        <br />\n        {this.state.stars.map((star) =>\n          (<div>\n            <UserCard onClick={this.onClickHandler} avatar={star.avatar} name={star.name} review={star.review} message={star.message} rating={star.rating} />\n            <br />\n          </div>))}\n      </div>\n    )\n    }\n}\nexport default Tweets\n"]},"metadata":{},"sourceType":"module"}