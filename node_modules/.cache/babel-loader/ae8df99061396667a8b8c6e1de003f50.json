{"ast":null,"code":"import _regeneratorRuntime from \"/Users/popovicisilviu/Documents/Redux-React-App/ptweet/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"/Users/popovicisilviu/Documents/Redux-React-App/ptweet/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"/Users/popovicisilviu/Documents/Redux-React-App/ptweet/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/popovicisilviu/Documents/Redux-React-App/ptweet/src/client-component/dashboard/Tweets.js\";\nimport React from 'react';\nimport UserCard from '../layout/UserCard';\nimport { compose, withState, withHandlers } from 'recompose';\nvar enhance = compose(withState('stars', 'updateStar', [{\n  id: 1,\n  avatar: require('../images/madison.jpg'),\n  name: 'Madison Ivy',\n  review: 'For Alex: Mmm, not bad but not good either. Huh.',\n  message: 'You still got a LONG career ahead of you! xoxo',\n  rating: Math.round(Math.random() * 100)\n}, {\n  id: 2,\n  avatar: require('../images/elsa.jpg'),\n  name: 'Elsa Jean',\n  review: 'Alex needs some more training.',\n  message: 'Ive heard you are the new hot thing on \"BBC\" News ;)',\n  rating: Math.round(Math.random() * 100)\n}, {\n  id: 3,\n  avatar: require('../images/jayden.jpg'),\n  name: 'Jayden James',\n  review: 'I got cute with him and gave him a second round.',\n  message: 'I expect your piercing personality to get to California.',\n  rating: Math.round(Math.random() * 100)\n}, {\n  id: 4,\n  avatar: require('../images/kendra.jpg'),\n  name: 'Kendra Lust',\n  review: 'I showed him what mommy knows, he can be a bad boy, ntz ntz.. Overall okaish.',\n  message: 'Mommy made new fresh cookies for you *wink* *wink*',\n  rating: Math.round(Math.random() * 100)\n}, {\n  id: 5,\n  avatar: require('../images/nicole.jpg'),\n  name: 'Nicole Aniston',\n  review: 'About Alex: Just no.',\n  message: 'Heard you are in town, wanna -meat- ?',\n  rating: Math.round(Math.random() * 100)\n}]), withState('post', 'updatedPost', ''), withState('response', 'updatedResponse', ''), withHandlers({\n  handleSubmit: function handleSubmit(props) {\n    return function (e) {\n      props.updatedPost(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(e) {\n          var response, body;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  e.preventDefault();\n                  _context.next = 3;\n                  return fetch('/', {\n                    method: 'POST',\n                    headers: {\n                      'Content-Type': 'application/json'\n                    },\n                    body: JSON.stringify(props.post)\n                  });\n\n                case 3:\n                  response = _context.sent;\n                  _context.next = 6;\n                  return response.text();\n\n                case 6:\n                  body = _context.sent;\n                  props.updatedResponse({\n                    response: body\n                  });\n                  props.updateStar(function (stars) {\n                    return [{\n                      avatar: require('../images/hammer.png'),\n                      name: 'Sebi \"The Viking\"',\n                      review: 'Alex suffers from inner genital syndrome',\n                      message: body,\n                      rating: Math.round(Math.random() * 100)\n                    }].concat(_toConsumableArray(stars));\n                  });\n\n                case 9:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    };\n  },\n  onChange: function onChange(props) {\n    return function (e) {\n      props.updatePost({\n        post: e.target.value\n      });\n    };\n  }\n}));\n\nvar Tweets = function Tweets(_ref2) {\n  var handleSubmit = _ref2.handleSubmit,\n      onChange = _ref2.onChange;\n  return React.createElement(\"div\", {\n    className: \"project-list section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Post a new Tweet:\")), React.createElement(\"input\", {\n    type: \"text\",\n    pattern: \".{3,}\",\n    required: true,\n    title: \"Write at least 3 characters!\",\n    maxLength: \"140\" // value={}\n    ,\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, \"Tweet!\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }), React.createElement(UserCard, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }));\n};\n\nexport default enhance(Tweets);","map":{"version":3,"sources":["/Users/popovicisilviu/Documents/Redux-React-App/ptweet/src/client-component/dashboard/Tweets.js"],"names":["React","UserCard","compose","withState","withHandlers","enhance","id","avatar","require","name","review","message","rating","Math","round","random","handleSubmit","props","e","updatedPost","preventDefault","fetch","method","headers","body","JSON","stringify","post","response","text","updatedResponse","updateStar","stars","onChange","updatePost","target","value","Tweets"],"mappings":"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","sourcesContent":["import React from 'react'\nimport UserCard from '../layout/UserCard'\nimport { compose, withState, withHandlers } from 'recompose'\n\nconst enhance = compose(\n  withState('stars', 'updateStar',\n    [{\n      id: 1,\n      avatar: require('../images/madison.jpg'),\n      name: 'Madison Ivy',\n      review: 'For Alex: Mmm, not bad but not good either. Huh.',\n      message: 'You still got a LONG career ahead of you! xoxo',\n      rating: Math.round(Math.random() * 100)\n    },\n    {\n      id: 2,\n      avatar: require('../images/elsa.jpg'),\n      name: 'Elsa Jean',\n      review: 'Alex needs some more training.',\n      message: 'Ive heard you are the new hot thing on \"BBC\" News ;)',\n      rating: Math.round(Math.random() * 100)\n    },\n    {\n      id: 3,\n      avatar: require('../images/jayden.jpg'),\n      name: 'Jayden James',\n      review: 'I got cute with him and gave him a second round.',\n      message: 'I expect your piercing personality to get to California.',\n      rating: Math.round(Math.random() * 100)\n    },\n    {\n      id: 4,\n      avatar: require('../images/kendra.jpg'),\n      name: 'Kendra Lust',\n      review: 'I showed him what mommy knows, he can be a bad boy, ntz ntz.. Overall okaish.',\n      message: 'Mommy made new fresh cookies for you *wink* *wink*',\n      rating: Math.round(Math.random() * 100)\n    },\n    {\n      id: 5,\n      avatar: require('../images/nicole.jpg'),\n      name: 'Nicole Aniston',\n      review: 'About Alex: Just no.',\n      message: 'Heard you are in town, wanna -meat- ?',\n      rating: Math.round(Math.random() * 100)\n    }]\n  ),\n  withState('post', 'updatedPost', ''),\n  withState('response', 'updatedResponse', ''),\n  withHandlers({\n    handleSubmit: (props) => e => {\n      props.updatedPost(async (e) => {\n        e.preventDefault()\n        const response = await fetch('/', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(props.post)\n        })\n        const body = await response.text()\n        props.updatedResponse({ response: body })\n        props.updateStar(stars => [{\n          avatar: require('../images/hammer.png'),\n          name: 'Sebi \"The Viking\"',\n          review: 'Alex suffers from inner genital syndrome',\n          message: body,\n          rating: Math.round(Math.random() * 100)\n        }, ...stars])\n      })\n    },\n    onChange: (props) => e => {\n      props.updatePost({ post: e.target.value })\n    }\n  })\n)\n\nconst Tweets = ({ handleSubmit, onChange }) => {\n  return (\n    <div className='project-list section'>\n      <form onSubmit={ handleSubmit }>\n        <p>\n          <strong>Post a new Tweet:</strong>\n        </p>\n        <input\n          type='text'\n          pattern='.{3,}'\n          required title='Write at least 3 characters!'\n          maxLength='140'\n          // value={}\n          onChange={onChange}\n        />\n        <button type='submit'>Tweet!</button>\n      </form>\n\n      <br />\n      <UserCard />\n    </div>\n  )\n}\n\nexport default enhance(Tweets)\n"]},"metadata":{},"sourceType":"module"}