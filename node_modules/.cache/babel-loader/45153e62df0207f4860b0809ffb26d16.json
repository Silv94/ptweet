{"ast":null,"code":"import _regeneratorRuntime from \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/src/client-component/layout/Navbar-components/PostModal.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\n\nfunction getModalStyle() {\n  var top = 20;\n  var left = 20;\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n\nvar styles = function styles(theme) {\n  return {\n    paper: {\n      position: 'absolute',\n      width: theme.spacing.unit * 50,\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing.unit * 4\n    }\n  };\n};\n\nvar PostTweets =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PostTweets, _React$Component);\n\n  function PostTweets() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PostTweets);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PostTweets)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      open: false,\n      response: '',\n      message: '',\n      responseToMessage: ''\n    };\n    _this.callApi =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var response, body;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch('/api/test');\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return response.json();\n\n            case 5:\n              body = _context.sent;\n\n              if (!(response.status !== 200)) {\n                _context.next = 8;\n                break;\n              }\n\n              throw Error(body.message);\n\n            case 8:\n              return _context.abrupt(\"return\", body);\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    _this.postTweet =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(e) {\n        var response, body;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                e.preventDefault();\n                _context2.next = 3;\n                return fetch('/api/test', {\n                  method: 'POST',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: JSON.stringify({\n                    post: _this.state.post\n                  })\n                });\n\n              case 3:\n                response = _context2.sent;\n                _context2.next = 6;\n                return response.text();\n\n              case 6:\n                body = _context2.sent;\n\n                _this.setState({\n                  responseToPost: body\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this.handleOpen = function () {\n      _this.setState({\n        open: true\n      });\n    };\n\n    _this.handleClose = function () {\n      _this.setState({\n        open: false\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(PostTweets, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      this.callApi().then(function (res) {\n        return _this2.setState({\n          response: res.express\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.handleOpen,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"New Tweet\"), React.createElement(Modal, {\n        \"aria-labelledby\": \"simple-modal-title\",\n        \"aria-describedby\": \"simple-modal-description\",\n        open: this.state.open,\n        onClose: this.handleClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        style: getModalStyle(),\n        className: classes.paper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Typography, {\n        variant: \"h6\",\n        id: \"modal-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"Post a new tweet:\"), React.createElement(\"form\", {\n        onSubmit: this.postTweet,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        value: this.state.post,\n        onChange: function onChange(e) {\n          return _this3.setState({\n            post: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Post!\")))));\n    }\n  }]);\n\n  return PostTweets;\n}(React.Component);\n\nPostTweets.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nvar SimpleModalWrapped = withStyles(styles)(SimpleModal);\nexport default SimpleModalWrapped;","map":{"version":3,"sources":["/Users/popovicisilviu/Documents/Redux-React-App/marioplan/src/client-component/layout/Navbar-components/PostModal.js"],"names":["React","PropTypes","withStyles","Typography","Modal","Button","getModalStyle","top","left","transform","styles","theme","paper","position","width","spacing","unit","backgroundColor","palette","background","boxShadow","shadows","padding","PostTweets","state","open","response","message","responseToMessage","callApi","fetch","json","body","status","Error","postTweet","e","preventDefault","method","headers","JSON","stringify","post","text","setState","responseToPost","handleOpen","handleClose","then","res","express","catch","err","console","log","classes","props","target","value","Component","propTypes","object","isRequired","SimpleModalWrapped","SimpleModal"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\n\n\nfunction getModalStyle() {\n  const top = 20\n  const left = 20\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n  },\n});\n\nclass PostTweets extends React.Component {\n  state = {\n    open: false,\n    response: '',\n    message: '',\n    responseToMessage: '',\n  };\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({response: res.express}))\n      .catch(err => console.log(err))\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/test');\n    const body = await response.json();\n\n    if (response.status !== 200) throw Error(body.message);\n\n    return body\n  }\n\n  postTweet = async e => {\n    e.preventDefault();\n    const response = await fetch('/api/test', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ post: this.state.post }),\n    });\n    const body = await response.text();\n     \n    this.setState({responseToPost: body});\n  }\n\n  handleOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Button onClick={this.handleOpen}>New Tweet</Button>\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.open}\n          onClose={this.handleClose}\n        >\n          <div style={getModalStyle()} className={classes.paper}>\n            <Typography variant=\"h6\" id=\"modal-title\">\n              Post a new tweet:\n            </Typography>\n            {/* <TextField\n                id=\"outlined-multiline-flexible\"\n                label=\"\"\n                multiline\n                rowsMax=\"4\"\n                value={this.state.multiline}\n                className={classes.textField}\n                margin=\"normal\"\n                helperText=\"\"\n                variant=\"outlined\"\n        /> */}\n          \n          <form onSubmit={this.postTweet}>\n            <input type='text' value={this.state.post} onChange={e => this.setState({ post: e.target.value })} />\n            <button type='submit'>Post!</button>\n          </form>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nPostTweets.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst SimpleModalWrapped = withStyles(styles)(SimpleModal);\n\nexport default SimpleModalWrapped;"]},"metadata":{},"sourceType":"module"}