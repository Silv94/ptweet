{"ast":null,"code":"var _jsxFileName = \"/Users/popovicisilviu/Documents/Redux-React-App/marioplan/src/client-component/layout/Navbar-components/PostModal.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport { compose, withState, withHandlers, withProps } from 'recompose';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  var top = 50 + rand();\n  var left = 50 + rand();\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n\nvar styles = function styles(theme) {\n  return {\n    paper: {\n      position: 'absolute',\n      width: theme.spacing.unit * 50,\n      backgroundColor: theme.palette.background.paper,\n      boxShadow: theme.shadows[5],\n      padding: theme.spacing.unit * 4\n    }\n  };\n};\n\nvar NewTweet = function NewTweet(_ref) {\n  var title = _ref.title,\n      toggleVisibility = _ref.toggleVisibility,\n      isVisible = _ref.isVisible;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: toggleVisibility,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"NewTweet\"), React.createElement(Modal, {\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, isVisible ? React.createElement(\"div\", {\n    style: getModalStyle(),\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    id: \"modal-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, title), React.createElement(Typography, {\n    variant: \"subtitle1\",\n    id: \"simple-modal-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"-space-for-message\")) : React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"nothing\")));\n};\n\nexport default compose(withState('isVisible', 'toggleVis', false), withHandlers({\n  toggleVisibility: function toggleVisibility(_ref2) {\n    var toggleVis = _ref2.toggleVis,\n        isVisible = _ref2.isVisible;\n    return function (event) {\n      return toggleVis(!isVisible);\n    };\n  }\n}), withProps(function (_ref3) {\n  var isVisible = _ref3.isVisible;\n  return {\n    title: isVisible ? 'Post your tweet' : null\n  };\n}))(NewTweet);","map":{"version":3,"sources":["/Users/popovicisilviu/Documents/Redux-React-App/marioplan/src/client-component/layout/Navbar-components/PostModal.js"],"names":["React","PropTypes","withStyles","Typography","Modal","Button","compose","withState","withHandlers","withProps","rand","Math","round","random","getModalStyle","top","left","transform","styles","theme","paper","position","width","spacing","unit","backgroundColor","palette","background","boxShadow","shadows","padding","NewTweet","title","toggleVisibility","isVisible","classes","toggleVis","event"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Modal from '@material-ui/core/Modal';\nimport Button from '@material-ui/core/Button';\nimport { compose, withState, withHandlers, withProps } from 'recompose'\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst styles = theme => ({\n  paper: {\n    position: 'absolute',\n    width: theme.spacing.unit * 50,\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing.unit * 4,\n  },\n});\n\nconst NewTweet = ({ title, toggleVisibility, isVisible }) => {\n  return (\n    <div>\n      <Button onClick={toggleVisibility}>NewTweet</Button>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        \n      >\n        {isVisible ? \n          <div style={getModalStyle()} className={classes.paper}>\n            <Typography variant=\"h6\" id=\"modal-title\">\n            {title}\n            </Typography>\n            <Typography variant=\"subtitle1\" id=\"simple-modal-description\">\n            -space-for-message\n            </Typography>\n          </div> \n          : <p>nothing</p>\n        }\n      </Modal>\n    </div>\n  )\n}\n\nexport default compose (\n    withState('isVisible', 'toggleVis', false),\n    withHandlers({\n        toggleVisibility: ({toggleVis, isVisible}) => {\n            return (event) => {\n                return toggleVis(!isVisible)\n            }\n        }\n    }),\n    withProps(({ isVisible }) => {\n        return {\n            title: isVisible ?  'Post your tweet' : null\n        }\n    })\n)(NewTweet)"]},"metadata":{},"sourceType":"module"}